generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  dob         DateTime? @db.Date
  address     String?   @db.VarChar(255)
  gender      String?   @db.VarChar(10)
  phoneNumber String?   @map("phone_number") @db.VarChar(10)
  username    String?   @db.VarChar(50)
  password    String?   @db.VarChar(255)
  role        String    @db.VarChar(255)
  bill        bill[]
  cart        cart[]

  @@map("user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bill {
  id           Int            @id @default(autoincrement())
  user_id      Int
  city         String         @db.VarChar(255)
  district     String         @db.VarChar(255)
  wards        String         @db.VarChar(255)
  address      String         @db.VarChar(255)
  note         String?        @db.VarChar(255)
  status       String?        @default("\u0000") @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.Timestamp(0)
  updated_at   DateTime?      @default(now()) @db.Timestamp(0)
  full_name    String?        @db.VarChar(255)
  phoneNumber  String?        @map("phone_number") @db.VarChar(10)
  email        String?        @db.VarChar(50)
  user         User           @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "fk_bill_user")
  bill_product bill_product[]

  @@index([user_id], map: "UserID")
}

model image_product {
  id               Int      @id @default(autoincrement())
  url              String   @db.VarChar(255)
  product_id       Int
  is_edit          Boolean? @default(dbgenerated("b'0'")) @db.Bit(1)
  product_model_id Int?
  product          product  @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "image_product_ibfk_1")

  @@index([product_id], map: "ProductID")
}

model post {
  id       Int       @id @default(autoincrement())
  title    String?   @db.VarChar(255)
  content  String?   @db.LongText
  createAt DateTime? @db.Date
  image    String?   @db.VarChar(255)
  sapo     String?   @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  description   String?         @db.VarChar(800)
  status        String?         @default("\u0000") @db.VarChar(255)
  category_id   Int?
  image_product image_product[]
  category      category?       @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_product_category")
  product_model product_model[]
  price         Float?
  created_at    DateTime        @default(now())
  updated_at    DateTime        @default(now())

  @@index([category_id], map: "fk_product_category")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_model {
  id           Int            @id @default(autoincrement())
  product_id   Int?
  price        Float?
  color        String?        @db.VarChar(255)
  size         String?        @db.Char(3)
  sold         Int?
  stock        Int?
  image        String?        @db.VarChar(255)
  bill_product bill_product[]
  cart         cart[]
  product      product?       @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_model_ibfk_1")

  @@index([product_id], map: "F_product_modal_product_id")
}

model bill_product {
  id               Int           @id @default(autoincrement())
  bill_id          Int
  product_model_id Int
  quantity         Int
  product_model    product_model @relation(fields: [product_model_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bill_product_fk1")
  bill             bill          @relation(fields: [bill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bill_product_fk2")

  @@index([bill_id], map: "BillID")
  @@index([product_model_id], map: "ProductID")
}

model cart {
  id               Int           @id @default(autoincrement())
  product_model_id Int
  user_id          Int
  quantity         Int?
  user             User          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_user_ibfk")
  product_model    product_model @relation(fields: [product_model_id], references: [id], onUpdate: Restrict, map: "cart_product_mode_id")

  @@index([product_model_id], map: "cart_product_fk1_idx")
  @@index([user_id], map: "cart_product_fk2_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category {
  id             Int        @id @default(autoincrement())
  name           String     @db.VarChar(255)
  parent_id      Int?
  level          Int?
  category       category?  @relation("categoryTocategory", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_parentId")
  other_category category[] @relation("categoryTocategory")
  product        product[]

  @@index([parent_id], map: "fk_parentId")
  @@index([id], map: "id")
}

model look_book {
  id       Int       @id @default(autoincrement())
  title    String?   @db.VarChar(255)
  content  String?   @db.LongText
  createAt DateTime? @db.Date
  url      String?   @db.VarChar(255)
}
